# auto-generated by grc.converter

id: uhd_rfnoc_streamer_keep_one_in_n
label: 'RFNoC: Keep 1 in N'

parameters:
-   id: n
    label: N
    dtype: int
    default: '100'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: vlen
    label: Vector Length
    dtype: int
    default: '256'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: block_index
    label: Keep 1 in N Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(block_index) < 0 else 'none') }
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(device_index) < 0 else 'none') }
-   id: fpga_module_name
    label: FPGA Module Name
    category: RFNoC Config
    dtype: string
    default: noc_block_keep_one_in_n
    hide: all

inputs:
-   domain: stream
    dtype: complex
    vlen: ${ vlen }
-   domain: message
    id: rfnoc
    optional: true

outputs:
-   domain: stream
    dtype: complex
asserts:
- ${ (vlen > 0 and vlen <= 4096) }

templates:
    imports: import ettus
    make: |
        ettus.rfnoc_generic(
            self.device3,
            uhd.stream_args( \# TX Stream Args
                cpu_format="fc32", \# TODO: This must be made an option
                otw_format="sc16",
                args="n="+str(${n}),
            ),
            uhd.stream_args( \# RX Stream Args
                cpu_format="fc32", \# TODO: This must be made an option
                otw_format="sc16",
                args="",
            ),
            "KeepOneInN", ${block_index}, ${device_index},
        )

file_format: 1
