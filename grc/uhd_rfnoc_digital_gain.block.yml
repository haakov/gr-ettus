# auto-generated by grc.converter

id: uhd_rfnoc_digital_gain
label: 'RFNoC: Digital Gain'

parameters:
-   id: gain
    label: Gain
    dtype: real
    default: '1.0'
-   id: block_index
    label: Digital Gain Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(block_index) < 0 else 'none') }
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(device_index) < 0 else 'none') }
-   id: fpga_module_name
    label: FPGA Module Name
    category: RFNoC Config
    dtype: string
    default: noc_block_digital_gain
    hide: all
-   id: grvlen
    label: Force Vector Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }

inputs:
-   domain: stream
    dtype: complex
    vlen: ${ grvlen }

outputs:
-   domain: stream
    dtype: complex
    vlen: ${ grvlen }

templates:
    imports: import ettus
    make: "ettus.rfnoc_generic(\n    self.device3,\n    uhd.stream_args( \\# TX Stream\
        \ Args\n        cpu_format=\"fc32\",\n        otw_format=\"sc16\",\n     \
        \   args=\"gr_vlen={0},{1}\".format(${grvlen}, \"\" if ${grvlen} == 1 else\
        \ \"spp={0}\".format(${grvlen})),\n    ),\n    uhd.stream_args( \\# RX Stream\
        \ Args\n        cpu_format=\"fc32\",\n        otw_format=\"sc16\",\n     \
        \   args=\"gr_vlen={0},{1}\".format(${grvlen}, \"\" if ${grvlen} == 1 else\
        \ \"spp={0}\".format(${grvlen})),\n    ),\n    \"DigitalGain\", ${block_index},\
        \ ${device_index},\n)\nself.${id}.set_arg(\"gain\", ${gain})\n  "
    callbacks:
    - set_arg("gain", ${gain})

file_format: 1
