# auto-generated by grc.converter

id: uhd_rfnoc_streamer_fosphor
label: 'RFNoC: fosphor'

parameters:
-   id: fft_size
    label: FFT Size
    dtype: int
    default: fft_size
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: hist_decim
    label: Histo Decimation
    dtype: int
    default: max(2, int(samp_rate / (15 * 64 * fft_size)))
-   id: wf_mode
    label: Waterfall mode
    dtype: enum
    options: ['-1', '0', '1', '2', '3']
    option_labels: [Disabled, Max Hold, 'Average 1:8', 'Average 1:64', 'Average 1:256']
-   id: wf_decim
    label: Waterfall Decimation
    dtype: int
    default: '16'
    hide: ${ ('none' if str(wf_mode) == '0' else 'all') }
-   id: offset
    label: Histo Offset
    category: Advanced
    dtype: int
    default: '0'
    hide: part
-   id: scale
    label: Histo Scale
    category: Advanced
    dtype: int
    default: '256'
    hide: part
-   id: trise
    label: Histo Rise Time
    category: Advanced
    dtype: int
    default: '4096'
    hide: part
-   id: tdecay
    label: Histo Decay Time
    category: Advanced
    dtype: int
    default: '16384'
    hide: part
-   id: alpha
    label: Average Alpha
    category: Advanced
    dtype: int
    default: '65280'
    hide: part
-   id: epsilon
    label: MaxHold Decay
    category: Advanced
    dtype: int
    default: '1'
    hide: part
-   id: block_index
    label: fopshor Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(block_index) < 0 else 'none') }
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(device_index) < 0 else 'none') }
-   id: fpga_module_name
    label: FPGA Module Name
    category: RFNoC Config
    dtype: string
    default: noc_block_fosphor
    hide: all

inputs:
-   domain: stream
    dtype: fc32
    vlen: ${ fft_size }
-   domain: message
    id: cfg
    optional: true

outputs:
-   label: out_hist
    domain: stream
    dtype: byte
    vlen: ${ fft_size }
-   label: out_wf
    domain: stream
    dtype: byte
    vlen: ${ fft_size }
    optional: true
    hide: ${ ('True' if str(wf_mode) == '-1' else 'False') }

templates:
    imports: import ettus
    make: |
        ettus.rfnoc_fosphor_c(
            ${fft_size},
            self.device3,
            % if block_index:
            ${block_index},
            % else:
            -1,
            % endif
            % if device_index:
            ${device_index},
            % else:
            -1,
            % endif
        )
        self.${id}.set_arg("enable", 3 if (${wf_mode} >= 0) else 1)
        self.${id}.set_arg("decim", ${hist_decim})
        self.${id}.set_arg("offset", ${offset})
        self.${id}.set_arg("scale", ${scale})
        self.${id}.set_arg("trise", ${trise})
        self.${id}.set_arg("tdecay", ${tdecay})
        self.${id}.set_arg("alpha", ${alpha})
        self.${id}.set_arg("epsilon", ${epsilon})
        self.${id}.set_arg("wf_ctrl", {0:0x00, 1:0x81, 2:0x82, 3:0x83}.get(${wf_mode}, 0))
        self.${id}.set_arg("wf_decim", {0:${wf_decim}, 1:8, 2:64, 3:256}.get(${wf_mode}, 16))
    callbacks:
    - set_arg("decim", ${hist_decim})
    - set_arg("offset", ${offset})
    - set_arg("scale", ${scale})
    - set_arg("trise", ${trise})
    - set_arg("tdecay", ${tdecay})
    - set_arg("alpha", ${alpha})
    - set_arg("epsilon", ${epsilon})
    - set_arg("wf_ctrl", {0:0x00, 1:0x81, 2:0x82, 3:0x83}.get(${wf_mode}, 0))
    - set_arg("wf_decim", {0:${wf_decim}, 1:8, 2:64, 3:256}.get(${wf_mode}, 16))

file_format: 1
