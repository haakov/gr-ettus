# auto-generated by grc.converter

id: uhd_rfnoc_streamer_radio
label: 'RFNoC: Radio'

parameters:
-   id: radio_index
    label: Radio Select
    dtype: enum
    options: ['0', '1']
    option_labels: [A, B]
-   id: num_channels
    label: Num Channels
    dtype: int
    default: '1'
    options: ['2', '1']
    option_labels: [2 Channels, 1 Channel]
    hide: part
-   id: direction
    label: Mode
    dtype: enum
    options: [tx, rx]
    option_attributes:
        hide_sink: ['', all]
        hide_source: [all, '']
-   id: cpu_format
    label: Host Format
    dtype: enum
    options: [fc32, sc16, s16, item32]
    option_labels: [Complex float32, Complex int16, Real int16, VITA word32]
    option_attributes:
        type: [fc32, sc16, s16, s32]
    hide: part
-   id: otw_format
    label: Device Format
    dtype: enum
    options: [sc16, s16]
    option_labels: [Complex int16, Real int16]
    option_attributes:
        type: [sc16, s16]
    hide: part
-   id: stream_args
    label: Stream Args
    dtype: string
-   id: source
    label: MB Clock Source
    dtype: string
    default: '"internal"'
    options: ['"internal"', '"external"', '"gpsdo"']
    option_labels: [Internal, External, GPSDO]
-   id: freq
    label: Center Frequency
    category: RF Options
    dtype: real
    default: 1.982e9
-   id: rate
    label: Sampling Rate
    category: RF Options
    dtype: real
    default: samp_rate
-   id: gain
    label: Gain
    category: RF Options
    dtype: real
    default: '20'
-   id: ant0
    label: 'Ch0: Antenna'
    category: RF Options
    dtype: enum
    options: ['"TX/RX"', '"RX1"', '"RX2"']
    option_labels: [TX/RX, RX1, RX2]
    hide: "${ #if not num_channels >= 1\n        all\n      #end if }"
-   id: lo_source0
    label: 'Ch0: LO Source'
    category: RF Options
    dtype: string
    default: '"internal"'
    options: ['"internal"', '"companion"', '"external"']
    option_labels: [Internal, Companion, External]
    hide: "${ #if not num_channels > 0\n    all\n    #elif hide_lo_controls\n    all\n\
        \    #else\n    direction.hide_source\n    #end if }"
-   id: lo_export0
    label: 'Ch0: LO Export'
    category: RF Options
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    hide: "${ #if not num_channels > 0\n    all\n    #elif hide_lo_controls\n    all\n\
        \    #else\n    direction.hide_source\n    #end if }"
-   id: rx_bandwidth0
    label: 'Ch0: Analog Bandwidth (Hz)'
    category: RF Options
    dtype: real
    default: 56e6
-   id: ant1
    label: 'Ch1: Antenna'
    category: RF Options
    dtype: enum
    options: ['"TX/RX"', '"RX1"', '"RX2"']
    option_labels: [TX/RX, RX1, RX2]
    hide: "${ #if not num_channels >= 2\n      all\n      #end if }"
-   id: lo_source1
    label: 'Ch1: LO Source'
    category: RF Options
    dtype: string
    default: '"internal"'
    options: ['"internal"', '"companion"', '"external"']
    option_labels: [Internal, Companion, External]
    hide: "${ #if not num_channels > 1\n    all\n    #elif hide_lo_controls\n    all\n\
        \    #else\n    direction.hide_source\n    #end if }"
-   id: lo_export1
    label: 'Ch1: LO Export'
    category: RF Options
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    hide: "${ #if not num_channels > 1\n    all\n    #elif hide_lo_controls\n    all\n\
        \    #else\n    direction.hide_source\n    #end if }"
-   id: rx_bandwidth1
    label: 'Ch1: Analog Bandwidth (Hz)'
    category: RF Options
    dtype: real
    default: 56e6
    hide: "${ #if num_channels > 1\n        direction.hide_source\n      #else\n \
        \       all\n      #end if }"
-   id: dcenable
    label: DC Offset Cancellation
    category: RF Options
    dtype: enum
    options: ['True', 'False']
    option_labels: [enabled, disabled]
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(device_index) < 0 else 'none') }
-   id: grvlen
    label: Force Vector Length
    category: RFNoC Config
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: hide_lo_controls
    label: Show LO Controls
    category: Advanced
    dtype: bool
    default: 'True'
    options: ['False', 'True']
    option_labels: ['Yes', 'No']
    hide: part

inputs:
-   domain: stream
    dtype: ${ cpu_format.type }
    vlen: ${ grvlen }
    multiplicity: ${ num_channels }
    optional: true
    hide: ${ direction.hide_sink }

outputs:
-   domain: stream
    dtype: ${ cpu_format.type }
    vlen: ${ grvlen }
    multiplicity: ${ num_channels }
    optional: true
    hide: ${ direction.hide_source }

templates:
    imports: import ettus
    make: "ettus.rfnoc_radio(\n    self.device3,\n    uhd.stream_args( \\# Tx Stream\
        \ Args\n        cpu_format=\"$cpu_format\",\n        otw_format=\"$otw_format\"\
        ,\n\t% if str(direction) == \"tx\":\n\targs=${stream_args},\n\t% else:\n \
        \       args=\"\", \\# empty\n\t% endif\n    ),\n    uhd.stream_args( \\#\
        \ Rx Stream Args\n        cpu_format=\"$cpu_format\",\n        otw_format=\"\
        $otw_format\",\n\t% if str(direction) == \"rx\":\n\targs=${stream_args},\n\
        \t% else:\n        args=\"\", \\# empty\n\t% endif\n    ),\n    ${radio_index},\
        \ ${device_index}\n)\nself.${id}.set_rate(${rate})\nfor i in xrange(${num_channels}):\n\
        \    self.${id}.set_${direction}_freq(${freq}, i)\n    self.${id}.set_${direction}_gain(${gain},\
        \ i)\n    self.${id}.set_${direction}_dc_offset(${dcenable}, i)\n% if (str(direction)\
        \ == \"rx\"):\n\nself.${id}.set_rx_bandwidth(${rx_bandwidth0}, 0)\n% elif\
        \ (num_channels > 1)::\nself.${id}.set_rx_bandwidth(${rx_bandwidth1}, 1)\n\
        % endif\n\nself.${id}.set_${direction}_antenna(${ant0}, 0)\n% if (num_channels\
        \ > 1):\nself.${id}.set_${direction}_antenna(${ant1}, 1)\n% endif\n% if (str(direction)\
        \ == \"rx\" and not hide_lo_controls):\n\nself.${id}.set_rx_lo_source(${lo_source0},\
        \  \"all\", 0)\nself.${id}.set_rx_lo_export_enabled(${lo_export0}, \"all\"\
        , 0)\n% if (num_channels > 1):\nself.${id}.set_rx_lo_source(${lo_source1},\
        \  \"all\", 1)\nself.${id}.set_rx_lo_export_enabled(${lo_export1}, \"all\"\
        , 1)\n% endif\n% endif\n\nself.${id}.set_clock_source(${source})\n"
    callbacks:
    - self.${id}.set_rate(${rate})
    - self.${id}.set_bandwidth(${rx_bandwidth})
    - "for i in xrange(${num_channels}):\n    self.${id}.set_${direction}_freq(${freq},\
        \ i)"
    - "for i in xrange(${num_channels}):\n    self.${id}.set_${direction}_gain(${gain},\
        \ i)"
    - self.${id}.set_${direction}_antenna(${ant0})
    - self.${id}.set_${direction}_antenna(${ant1})
    - '

        % if str(direction) == "rx" and not hide_lo_controls and num_channels > 0:

        self.${id}.set_rx_lo_export_enabled(${lo_export0}, "all", 0)

        % endif

        '
    - '

        % if str(direction) == "rx" and not hide_lo_controls and num_channels > 1:

        self.${id}.set_rx_lo_export_enabled(${lo_export1}, "all", 1)

        % endif

        '
    - '

        % if str(direction) == "rx" and not hide_lo_controls and num_channels > 0:

        self.${id}.set_rx_lo_source(${lo_source0}, "all", 0)

        % endif

        '
    - '

        % if str(direction) == "rx" and not hide_lo_controls and num_channels > 1:

        self.${id}.set_rx_lo_source(${lo_source1}, "all", 1)

        % endif

        '
    - self.${id}.set_clock_source(${source})

file_format: 1
