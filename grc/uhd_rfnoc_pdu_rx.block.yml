# auto-generated by grc.converter

id: uhd_rfnoc_pdu_rx
label: 'RFNoC: PDU RX'

parameters:
-   id: block_index
    label: FIFO Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(block_index) < 0 else 'none') }
-   id: type
    label: Host Data Type
    dtype: enum
    options: [fc32, sc16, u8, item32]
    option_labels: [Complex float32, Complex int16, Byte, VITA word32]
    option_attributes:
        type: [complex, sc16, byte, s32]
    hide: part
-   id: otw_format
    label: Device Format
    dtype: enum
    options: [sc16, sc8, u8]
    option_labels: [Complex int16, Complex int8, Byte]
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(device_index) < 0 else 'none') }
-   id: mtu
    label: MTU
    dtype: int
    default: '2048'
-   id: grvlen
    label: Force Vector Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }

inputs:
-   domain: stream
    dtype: ${ type.type }
    vlen: ${ grvlen }

outputs:
-   domain: message
    id: data
    optional: true

templates:
    imports: import ettus
    make: "ettus.rfnoc_pdu_rx(\n    self.device3,\n    uhd.stream_args( \\# Tx Stream\
        \ Args\n        cpu_format=\"$type\",\n        otw_format=\"$otw_format\"\
        ,\n        args=\"\"\n    ),\n    uhd.stream_args( \\# Rx Stream Args\n  \
        \      cpu_format=\"$type\",\n        otw_format=\"$otw_format\",\n      \
        \  args=\"\"\n    ),\n    \"FIFO\",\n    ${block_index}, ${device_index},\
        \ ${mtu})\n  "

file_format: 1
