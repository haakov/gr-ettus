# auto-generated by grc.converter

id: uhd_rfnoc_streamer_debug
label: 'RFNoC: Debug'

parameters:
-   id: null_src
    label: Enable Null Source
    dtype: int
    options: ['1', '0']
    option_labels: ['True', 'False']
-   id: null_sink
    label: Enable Null Sink
    dtype: int
    options: ['1', '0']
    option_labels: ['True', 'False']
-   id: spp
    label: Packet Size
    dtype: int
    default: '64'
-   id: block_index
    label: Debug Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(block_index) < 0 else 'none') }
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(device_index) < 0 else 'none') }
-   id: fpga_module_name
    label: FPGA Module Name
    category: RFNoC Config
    dtype: string
    default: noc_block_debug
    hide: all

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: complex
-   label: stats
    domain: stream
    dtype: int

templates:
    imports: import ettus
    make: "ettus.rfnoc_generic(\n    self.device3,\n    uhd.stream_args( \\# TX Stream\
        \ Args\n        cpu_format=\"fc32\", \\# TODO: This must be made an option\n\
        \        otw_format=\"sc16\",\n        channels=(0,1),\n        args=\"\"\
        ,\n    ),\n    uhd.stream_args( \\# RX Stream Args\n        cpu_format=\"\
        fc32\", \\# TODO: This must be made an option\n        otw_format=\"sc16\"\
        ,\n        args=\"\",\n    ),\n    \"Debug\", ${block_index}, ${device_index},\n\
        )\nself.${id}.set_arg(\"spp\", ${spp})\nself.${id}.set_arg(\"config\", 2*${null_src}\
        \ + ${null_sink})\n  "
    callbacks:
    - set_arg("spp", ${spp})
    - set_arg("config", 2*${null_src} + ${null_sink})

file_format: 1
